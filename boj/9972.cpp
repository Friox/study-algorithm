#include <algorithm>
#include <ios>
#include <string.h>
char stage[54], buffer[54], command[11], face[7], direction[6];
const int OFFSET[54] = {
	27, 28, 29, 30, 31, 32, 33, 34, 35,
	36, 37, 38, 0, 1, 2, 45, 46, 47, 9, 10, 11,
	39, 40, 41, 3, 4, 5, 48, 49, 50, 12, 13, 14,
	42, 43, 44, 6, 7, 8, 51, 52, 53, 15, 16, 17,
	18, 19, 20, 21, 22, 23, 24, 25, 26
};
const int MOVE_MAP[6][20][2] = {
    {
		{45, 33}, {48, 34}, {51, 35}, {20, 45}, {19, 48}, {18, 51}, {44, 20},
		{41, 19}, {38, 18}, {33, 44}, {34, 41}, {35, 38}, {2, 0},   {5, 1},
		{8, 2},   {7, 5},   {6, 8},   {3, 7},   {0, 6},   {1, 3}
	},
    {
		{36, 29}, {39, 28}, {42, 27}, {24, 36}, {25, 39}, {26, 42}, {53, 24},
     	{50, 25}, {47, 26}, {29, 53}, {28, 50}, {27, 47}, {11, 9},  {14, 10},
     	{17, 11}, {16, 14}, {15, 17}, {12, 16}, {9, 15},  {10, 12}
	},
    {
		{51, 6},  {52, 7},  {53, 8},  {15, 51}, {16, 52}, {17, 53}, {42, 15},
     	{43, 16}, {44, 17}, {6, 42},  {7, 43},  {8, 44},  {20, 18}, {23, 19},
     	{26, 20}, {25, 23}, {24, 26}, {21, 25}, {18, 24}, {19, 21}
	},
    {
		{47, 11}, {46, 10}, {45, 9},  {2, 47},  {1, 46},  {0, 45},  {38, 2},
     	{37, 1},  {36, 0},  {11, 38}, {10, 37}, {9, 36},  {29, 27}, {32, 28},
     	{35, 29}, {34, 32}, {33, 35}, {30, 34}, {27, 33}, {28, 30}
	},
    {
		{0, 27},  {3, 30},  {6, 33},  {18, 0},  {21, 3},  {24, 6},  {17, 18},
     	{14, 21}, {11, 24}, {27, 17}, {30, 14}, {33, 11}, {38, 36}, {41, 37},
     	{44, 38}, {43, 41}, {42, 44}, {39, 43}, {36, 42}, {37, 39}
	},
    {
		{9, 35},  {12, 32}, {15, 29}, {26, 9},  {23, 12}, {20, 15}, {8, 26},
     	{5, 23},  {2, 20},  {35, 8},  {32, 5},  {29, 2},  {47, 45}, {50, 46},
     	{53, 47}, {52, 50}, {51, 53}, {48, 52}, {45, 51}, {46, 48}
	}
};

void rotate(int r, int cnt) {
	for (int i = 0; i < cnt; i++) {
		std::copy(stage, stage + 54, buffer);
    	for (int l = 0; l < 20; l++) buffer[MOVE_MAP[r][l][0]] = stage[MOVE_MAP[r][l][1]];
    	std::copy(buffer, buffer + 54, stage);
	}
}

bool checkCube() {
	char pC;
	for (int i = 0; i < 6; i++) {
		pC = stage[i * 9];
		for (int j = 1; j < 9; j++) {
			if (pC != stage[i * 9 + j]) return false;
		}
	}
	return true;
}

int main() {
    while (1) {
        scanf("%s", command);
        if (!strcmp(command, "START")) {
            // 시작일때
            int n, rI, cnt;
            for (int i = 0; i < 54; i++) scanf(" %c", &stage[OFFSET[i]]);
            while (1) {
                scanf("%s", face);
                if (!strcmp(face, "END")) {
                    // END일때 탈출
                    break;
                } else {
                    // 정상적인 면, 방향 입력
                    scanf("%s", direction);
                    if (face[2] == 'o') rI = 0;
                    else if (face[2] == 'f') rI = 4;
                    else if (face[2] == 'g') rI = 5;
                    else if (face[2] == 'c') rI = 1;
                    else if (face[2] == 'p') rI = 3;
                    else rI = 2;
                    if (!strcmp(direction, "right")) cnt = 1;
                    else cnt = 3;
                    rotate(rI, cnt);
                }
            }
            printf("%s\n", (checkCube() ? "Yes" : "No"));
        } else {
            break;
        }

    }
}